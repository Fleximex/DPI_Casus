/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import game.GameState;
import java.awt.Color;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.jms.JMSException;
import javax.naming.NamingException;
import jms.ServerGateway;

/**
 *
 * @author Maarten
 */
public class LobbyUI extends javax.swing.JFrame
{    
    private boolean gameStateSent = false;
    private GameState gameState = null;
    private ServerGateway connectingGateway;
    private ServerGateway serverGateway;
    private int PlayerID = 0;
    
    public LobbyUI()
    {
        init();
        Random r = new Random(); 
        gameState = new GameState(r.nextInt(89999) + 10000);
        try
        {
            connectingGateway  = new ServerGateway("ConnectingQueue", "null")
            {
                @Override
                public void onGameStateArrived(GameState gameState)
                {
                }
            };
        }
        catch (JMSException | NamingException ex)
        {
            Logger.getLogger(LobbyUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            serverGateway  = new ServerGateway("ToGameServerQueue", "ConnectedQueue" + Integer.toString(gameState.getPlayerID()))
            {
                @Override
                public void onGameStateArrived(GameState gameState)
                {
                    if(!gameState.isConnected())
                    {
                        jLabel1.setForeground(new Color(105, 194, 18));
                        jLabel1.setText("Connected.");
                    }
                    else
                    {
                        setGameState(gameState);
                        handleLogic();
                    }
                }
            };
        }
        catch (JMSException | NamingException ex)
        {
            Logger.getLogger(LobbyUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void init()
    {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent)
            {
                connectingGateway.closeConnection();
                serverGateway.closeConnection();
            }
        });
        this.setVisible(true);
    }
    
    public void setGameState(GameState gameState)
    {
        this.gameState = gameState;
    }
    
    public void handleLogic()
    {
        jLabel4.setText(gameState.getGuessWord());
        if(gameState.isSomeoneWinner())
        {
            if(gameState.isWinner())
            {
                jLabel5.setForeground(new Color(105, 194, 18));
                jLabel5.setText("You have won!");
            }
            else
            {
                jLabel5.setForeground(new Color(214, 137, 22));
                jLabel5.setText("You have lost!");
            }
        }
        else
        {
            jButton2.setEnabled(true);            
            if (gameState.isGuess())
            {
                if (gameState.isGoodGuess())
                {
                    jLabel5.setForeground(new Color(105, 194, 18));
                    jLabel5.setText("Good Guess!");
                }
                else
                {
                    jLabel5.setForeground(new Color(214, 137, 22));
                    jLabel5.setText("Wrong Guess!");
                }
            }
            this.repaint(); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButton1.setText("Connect to Lobby");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Test Letter:");

        jButton2.setText("Guess!");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Current guess:");

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 51, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(jTextField1))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!gameStateSent)
        {
            jLabel1.setForeground(new Color(214, 137, 22));
            jLabel1.setText("Connecting...");
            if(connectingGateway.sendGameState(gameState))
            {
                gameStateSent = true;
                jButton1.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(!gameState.getGuessWord().contains(jTextField1.getText()))
        {
            jButton2.setEnabled(false);
            gameState.setGuessLetter(jTextField1.getText());
            gameState.setGuess(true);
            gameState.setGoodGuess(false);
            if (!serverGateway.sendGameState(gameState))
            {
                System.out.println("ERROR: game out of sync!");
            } 
        }
        else
        {
            jLabel5.setForeground(new Color(214, 137, 22));
            jLabel5.setText("Already Guessed!");
        }       
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
